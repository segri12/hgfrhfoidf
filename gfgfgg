        {
            {
                Game game = new Game();
                game.Start();
            }
        }

        class Game
        {
            private Random _random = new Random();
            private List<Fighter> _fighters = new List<Fighter> { };

            private Fighter _fighter1;
            private Fighter _fighter2;

            public Game()
            {
                CreateFighters();
            }

            public void Start()
            {
                const string CommandShowAllFighters = "1";
                const string CommandChooseFighters = "2";
                const string CommandStartFight = "3";
                const string CommandExit = "4";

                bool isStart = true;

                while (isStart)
                {
                    Console.WriteLine($"{CommandShowAllFighters} - показать всех бойцов");
                    Console.WriteLine($"{CommandChooseFighters} - выбрать бойцов");
                    Console.WriteLine($"{CommandStartFight} - начать бой между выбранными бойцами");
                    Console.WriteLine($"{CommandExit} - выйти");
                    Console.Write("\nВыберите пункт меню: ");
                    string userInput = Console.ReadLine();

                    switch (userInput)
                    {
                        case CommandShowAllFighters:
                            ShowAllСharacteristicsFighters();
                            break;

                        case CommandChooseFighters:
                            ChooseFighters(); 
                            break;

                        case CommandStartFight:
                            Fight(_fighter1, _fighter2);
                            break;

                        case CommandExit:
                            isStart = false;
                            break;

                        default:
                            Console.WriteLine("\nНет такой команды");
                            break;
                    }

                    Console.ReadKey();
                    Console.Clear();
                }
            }

            private void CreateFighters()
            {
                _fighters.Add(new CrazyMax(_random, "Безумный МАКС"));
                _fighters.Add(new TrevorPhillips(_random, "Тревор Филипс"));
                _fighters.Add(new WilliamBlaskowitz(_random, "Уильям Бласковиц"));
                _fighters.Add(new Kratos(_random, "Кратос"));
                _fighters.Add(new Batman(_random, "Бетман"));
            }

            private bool TryGetFigher(out Fighter fighter) 
            {
                fighter = null;

                ShowFighters();

                Console.Write("\nВыберите бойца: ");

                if (int.TryParse(Console.ReadLine(), out int index) == true) 
                {
                    index--;

                    if (index >= 0 && index < _fighters.Count && _fighters[index].Health > 0)
                    {
                        fighter = _fighters[index];

                        return true;
                    }
                    else
                    {
                        Console.WriteLine("\nНет такого бойца");
                    }
                }

                return false;
            }

            private void ChooseFighters() 
            {
                _fighter1 = null;
                _fighter2 = null;

                if (TryGetFigher(out Fighter tryGetFighter1) == true)
                {
                    _fighter1 = tryGetFighter1; 

                    Console.WriteLine("\nПервый боец: ");
                    _fighter1.ShowInfo();

                    if (TryGetFigher(out Fighter tryGetFighter2) == true && _fighter1 != tryGetFighter2)
                    {
                        _fighter2 = tryGetFighter2;

                        Console.WriteLine("\nВторой боец: ");
                        _fighter2.ShowInfo();
                    }
                    else
                    {
                        Console.WriteLine("\nОшибка, повторите выбор");
                    }
                }
            }

            private void Fight(Fighter fighter1, Fighter fighter2)
            {
                _fighter1 = null;
                _fighter2 = null;

                if (fighter1 != null && fighter2 != null)
                {
                    Console.WriteLine("\nБитва началась!\n");

                    while (fighter1.IsDead() == false && fighter2.IsDead() == false)
                    {
                        if (ChooseAttackerFirst(fighter1, fighter2) == fighter1) 
                        {
                            Attack(fighter1, fighter2);
                            Attack(fighter2, fighter1);
                        }
                        else
                        {
                            Attack(fighter2, fighter1);
                            Attack(fighter1, fighter2);
                        }
                    }

                    Console.WriteLine("\nБитва окончена!");
                }
                else
                {
                    Console.WriteLine("\nВыберите бойцов");
                }
            }

            private Fighter ChooseAttackerFirst(Fighter fighter1, Fighter fighter2)
            {
                if (fighter1.RollDice(_random) >= fighter2.RollDice(_random)) 
                {
                    return fighter1;
                }

                return fighter2;
            }

            private void Attack(Fighter attacker, Fighter defender) 
            {
                if (attacker.IsDead() == false)
                {
                    defender.TakeDamage(attacker.Attak()); 
                                                           
                    Console.WriteLine($"{attacker.Name} (HP:{attacker.Health}) нанес урон {defender.Name} (HP:{defender.Health})");

                    defender.AddSKill();
                    attacker.AddSKill();

                    if (defender.Health <= 0)
                    {
                        Console.WriteLine($"\n{defender.Name} убит!");
                    }
                }
            }

            private void ShowAllСharacteristicsFighters() 
            {
                int number = 0;

                Console.Write("\n");

                foreach (var fighter in _fighters)
                {
                    number++;

                    Console.Write(number + " - ");
                    fighter.ShowInfo();
                }
            }

            private void ShowFighters() 
            {
                int number = 0;

                Console.Write("\n");

                foreach (var fighter in _fighters)
                {
                    number++;

                    if (fighter.Health > 0)
                    {
                        Console.WriteLine($"{number} - {fighter.Name}");
                    }
                }
            }
        }

        class Fighter
        {
            protected bool IsSkill = false; 

            public Fighter(Random random, string name)
            {
                Name = name;

                CreateHealth(random); 
                CreateArmor(random);
                CreateDamage(random); 
            }

            public string Name { get; protected set; }
            public int Health { get; protected set; } 
            public int Armor { get; protected set; }
            public int Damage { get; protected set; }

            public int RollDice(Random random) 
            {
                int maxValue = 105;

                return random.Next(0, maxValue); 
            }

            public void ShowInfo() 
            {
                if (Health <= 0)
                {
                    Console.WriteLine($"Убит");
                    Console.WriteLine("----------------------------------------------------------------------------");
                }
                else
                {
                    Console.WriteLine($"Класс бойца: {Name} \nЗдоровье: {Health} \nБроня: {Armor} \nУрон: {Damage}");
                    ShowSKill();
                    Console.WriteLine("----------------------------------------------------------------------------");
                }
            }

            public bool IsDead() 
            {
                if (Health <= 0)
                {
                    return true;
                }

                return false;
            }

            public int TakeDamage(int damage)  
            {
                int divider = 100; 

                Health -= damage - damage * Armor / divider;

                return Health;
            }

            public virtual int Attak() 
            {
                return Damage;
            }

            public virtual void AddSKill() 
            {
            }

            protected void CreateHealth(Random random) 
            {
                int minValue = 80;
                int maxValue = 121;

                Health = random.Next(minValue, maxValue);
            }

            protected void CreateArmor(Random random) 
            {
                int minValue = 20;
                int maxValue = 31;

                Armor = random.Next(minValue, maxValue);
            }

            protected void CreateDamage(Random random)  
            {
                int minValue = 20;
                int maxValue = 41;

                Damage = random.Next(minValue, maxValue);
            }

            protected virtual void ShowSKill() 
            {
            }
        }

        class CrazyMax : Fighter  
        {
            public CrazyMax(Random random, string name) : base(random, name)
            {
            }

            public override void AddSKill() 
            {
                int minHealth = 30;
                int maxArmor = 50;

                if (Health < minHealth && IsSkill == false)
                {
                    IsSkill = true; 
                    Armor = maxArmor;

                    Console.WriteLine($"У {Name} сработало умение - броня увеличилась до {Armor}");
                }
            }

            protected override void ShowSKill()
            {
                Console.Write("Умение: Если у бойца здоровье < 30, то получаемый урон уменьшается на 50%\n");
            }
        }

        class TrevorPhillips : Fighter  
        {
            public TrevorPhillips(Random random, string name) : base(random, name)
            {
            }

            public override void AddSKill() 
            {
                int minHealth = 30;
                int quotient = 2; 

                if (Health < minHealth && IsSkill == false)
                {
                    IsSkill = true; 
                    Damage *= quotient;

                    Console.WriteLine($"У {Name} сработало умение - урон увеличился до {Damage}");
                }
            }

            protected override void ShowSKill() 
            {
                Console.Write("Умение: Если у бойца  здоровье < 30, то урон увеличивается в 2 раза\n");
            }
        }

        class WilliamBlaskowitz : Fighter 
        {
            public WilliamBlaskowitz(Random random, string name) : base(random, name)
            {
            }

            public override int Attak()
            {
                int minHealth = 40;
                int quotient = 5; 
                int devide = 2; 
                int sumDamage = 0; 

                if (Health < minHealth && IsSkill == false)
                {
                    IsSkill = true;

                    for (int i = 0; i < quotient; i++)
                    {
                        sumDamage += Attak() / devide;
                    }

                    Console.WriteLine($"У {Name} сработало умение - боец применил серию ударов");

                    return sumDamage;
                }
                else
                {
                    return base.Attak();
                }

            }
            protected override void ShowSKill() 
            {
                Console.Write("Умение: Если у бойца  здоровье < 40, то боец наносит серию ударов\n");
            }
        }

        class Kratos : Fighter                                                         
        {
            public Kratos(Random random, string name) : base(random, name)
            {
            }

            public override void AddSKill() 
            {
                if (Health < 0 && IsSkill == false)
                {
                    IsSkill = true;

                    Health = 30;

                    Console.WriteLine($"У {Name} сработало умение - Вы воскресли после нанесения смертельного удара");
                }
            }

            protected override void ShowSKill() 
            {
                Console.Write("Умение: Воскрешение\n");
            }
        }

        class Batman : Fighter 
        {
            public Batman(Random random, string name) : base(random, name)
            {
            }

            public override void AddSKill()
            {
                int minHealth = 20;
                int quotient = 3; 

                if (Health > 0 && Health < minHealth && IsSkill == false)
                {
                    IsSkill = true;

                    Health *= quotient;

                    Console.Write($"У {Name} сработало умение - восстановилась часть здоровья\n");
                }
            }

            protected override void ShowSKill()
            {
                Console.Write("Умение: Если у бойца  здоровье < 20, то здоровье бойца увеличивается в 3 раза\n");
            }
        }
    }
}
